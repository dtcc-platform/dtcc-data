name: Build and upload to PyPI

on:
  push:
    branches: [ develop ]
  pull_request:
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels (cibuildwheel) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Upgrade pip and install cibuildwheel
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install cibuildwheel==2.22.0
      - name: Install dependencies on Windows
        if: runner.os == 'Windows'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --no-progress
          # If you need MSVC or other tools, they are generally already available
          # on GitHub's windows-latest image.
          
      - name: Build wheels
        env:
          # Only build Python 3.11 wheels, but you can allow more if you like (cp310, cp39, etc.)
          CIBW_BUILD: cp310-* cp311-* cp312-*

          # manylinux image to use
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_SKIP: "*-musllinux_*"
          CIBW_ARCHS_MACOS: universal2
          
          # Install build dependencies in the container before building
          CIBW_BEFORE_BUILD_LINUX: |
           yum install -y dnf-plugins-core && yum install -y gcc gcc-c++ make && python -m pip install --upgrade scikit-build-core cmake ninja && echo 'done'
          
          CIBW_ENVIRONMENT_LINUX: |
            PY_EXE=$(which python)
            PY_INCLUDE=$(python -c "import sysconfig; print(sysconfig.get_paths()['include'])")
            PY_LIB_DIR=$(python -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))")
            # Adjust if your library file name is different, e.g. libpython3.11m.so on some systems
            PY_LIB=$PY_LIB_DIR/libpython3.11.so
            export CMAKE_ARGS="-DPython3_EXECUTABLE=${PY_EXE} \
                               -DPython3_INCLUDE_DIR=${PY_INCLUDE} \
                               -DPython3_LIBRARY=${PY_LIB} \
                               -DPython3_FIND_STRATEGY=LOCATION"
        run: cibuildwheel --output-dir wheelhouse
