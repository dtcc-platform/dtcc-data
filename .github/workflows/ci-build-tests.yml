name: CI-build-tests

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out repository
      - name: Check out repository
        uses: actions/checkout@v3

      # 2) Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 3) Install dependencies from pyproject.toml
      #    First, upgrade build tools, then install the package
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel pytest
          python -m pip install .  # or `pip install -e .` for editable install

      # 4) Run tests (assuming pytest is used)
      - name: Run tests
        run: |
          pytest tests/test*.py

  notify:
     needs: build-and-test
     runs-on: ubuntu-latest
     if: always()  # always run even if build fails
     steps:
      - name: Slack notification on success
        if: ${{ needs.build-and-test.result == 'success' }}
        run: |
          # Gather some info from the context
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          REPO_NAME="${{ github.repository }}"
          COMMIT_AUTHOR="${{ github.event.head_commit.author.name }}"
          JOB_NAME="${{ needs.build-and-test.outputs.job_name }}"

          
          # Post to Slack (via webhook in secrets)
          curl -X POST -H 'Content-type: application/json' \
            --data "{
              \"text\": \"✅ *SUCCESS*\nRepository: \`${REPO_NAME}\`\nJob: \`${JOB_NAME}\`\nCommit: \`${SHORT_SHA}\`\nAuthor: ${COMMIT_AUTHOR}\"
            }" \
            ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack notification on failure
        if: ${{ needs.build-and-test.result == 'failure' }}
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          REPO_NAME="${{ github.repository }}"
          COMMIT_AUTHOR="${{ github.event.head_commit.author.name }}"
          JOB_NAME="${{ needs.build-and-test.outputs.job_name }}"

          
           curl -X POST -H 'Content-type: application/json' \
            --data "{
              \"text\": \"❌ *FAILURE*\nRepository: \`${REPO_NAME}\`\nJob: \`${JOB_NAME}\`\nCommit: \`${SHORT_SHA}\`\nAuthor: ${COMMIT_AUTHOR}\"
            }" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
